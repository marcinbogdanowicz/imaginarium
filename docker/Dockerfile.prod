###########
# BUILDER #
###########

FROM python:3.11-alpine as builder

WORKDIR /usr/src/app

ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apk update \
    && apk add postgresql-dev gcc python3-dev musl-dev

# install dependencies
RUN pip install --upgrade pip
COPY ../requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt



#########
# FINAL #
#########

FROM python:3.11.1-alpine

# Create directory for the app user.
RUN mkdir -p /home/app

# Create the app user.
RUN addgroup -S app && adduser -S app -G app

# Create directories.
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles
WORKDIR $APP_HOME

# Install dependencies.
RUN apk update && apk add libpq
COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .
RUN pip install --no-cache /wheels/*

# Copy project.
COPY ./ $APP_HOME

# Normalize start scripts newlines and change permissions:
# Web.
RUN sed -i 's/\r$//g' $APP_HOME/start-web.prod.sh
RUN chmod +x $APP_HOME/start-web.prod.sh

# Celery worker.
RUN sed -i 's/\r$//g' $APP_HOME/start-celery.prod.sh
RUN chmod +x $APP_HOME/start-celery.prod.sh

# Celery beat.
RUN sed -i 's/\r$//g' $APP_HOME/start-celery-beat.prod.sh
RUN chmod +x $APP_HOME/start-celery-beat.prod.sh

# Chown all file to app user.
RUN chown -R app:app $APP_HOME

# Change to app user.
USER app